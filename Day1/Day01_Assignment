
# CLOUD

## 클라우드란?

인터넷을 통해 액세스랑 수 있는 서버와 이러한 서버에서 작동하는 소프트웨어와 같은 데이터베이스를 말한다.

클라우드 서버는 전 세계 데이터 센터에 위치한다.


<br />

## lasS, SaaS, PaaS의 개념

대표적인 클라우드 서비스 모델의 유형이다. 

쉽게 말하면, 무엇까지 클라우드 업체가 책임지고, 무엇을 사용자가 책임 지는지의 차이라고 보면 된다.

<br />

### laaS

가상서버(VM), 스토리지, 네트워크 같은 기본 인프라를 제공한다.

사용자는 운영체제, 미들웨어, 런타임, 애플리케이션, 데이터를 관리해야 한다.

ex : AWS  EC2, Google Compute Engine 

조금 쉽게 설명하면, laaS는 마치 땅만 빌려주는 서비스라고 생각하면 쉽다.

용어

- 미들웨어(Middleware) : 프로그램과 OS 사이에서 통신, 데이터 처리, 메시지 전달을 도와주는 중간 소프트웨어라고 생각하면 된다.
- 런타임(Runtime) : 프로그램이 실행될 때 필요한 환경을 말한다. 라이브러리, VM 등을 떠올리면 된다.

<br />

### PaaS

인프라, 운영체제, 런타임, 미들웨어까지 제공한다.

사용자는 애플리테이션 코드와 데이터를 관리해야 한다.

ex : AWS Elastic Beanstalk, Google App Engine

조금 쉽게 설명하면, 기본 뼈대는 준비되어 있고, 사용자는 원하는 것만 넣으면 되는 것이라고 생각하면 된다.

용어

- 애플리케이션 코드 : 실제로 동작하는 프로그램 로직

<br />

### SaaS

애플리케이션까지 설정되어 있는 소프트웨어를 제공한다.

사용자가 관리해야 하는 것은 거의 없다.

ex : Gmail 등

용어

- 애플리케이션 : 사용자에게 제공되는 소프트웨어 프로그램

| 서비스 | 제공하는 것 | 사용자가 관리해야 하는 것 | 예시 |
| --- | --- | --- | --- |
| laaS | 가상 서버, 스토리지, 네트워크 | OS, 런타임, 미들웨어, 애플리케이션, 데이터 | AWS EC2, Google Compute Engine |
| PaaS | laaS, OS, 런타임, 미들웨어 | 애플리케이션 코드, 데이터 | AWS Elastic Beanstalk, Google App Engine |
| SaaS | laaS, Paas, 애플리케이션 | 데이터 입력, 사용 | Gmail |

<br />
<br />

## 클라우드와 온프레미스

### CLOUD

인테넷을 통해 가상화된 컴퓨터의 IT 리소스를 제공하는 것이다.

**장점**

1. 운영 효율성 높음
    
    흩어진 자원을 개별로 관리하지 않고, 중앙에 모인 자원을 관리하는 이점이 있다.
    
2. 자원 활용성 증가
    
    사용하지 않는 자원을 필요로 하는 사용자에게 원격을 제공하는 것이기 때문에 활용성이 증가된다.
    
3. 인공지는 서비스 확장
    
    AI는 데이터를 모으는 것이 중요한데, 클라우드는 기계학습에 필요한 데이터를 쉽게 모을 수 있다.
    
4. 초기 투자 비용이 낮다.

**단점**

1. 보안 문제
    
    클라우드는 물리적인 자원을 가상화 기반으로 구현하기 때문에 가상화 소프트웨어 내에 보안 취약점이 존재할 수 있다. 또한 물리적으로 분리되어 있지 않기 때문에 보안 취약점이 확산될 수 있다.
    
2. 블랙박스 문제
    
    장애가 발생했을 경우 클라우드 서비스 제공자가 맡고있는 영역에 대한 접근, 블랙박스 문제가 존재한다.
    
<br />

### 온프레미스

클라우드 서비스와 정반대 개념으로, 자제척으로 보유한 전산실 서버에 직접 설치해 운영하는 방식을 말한다.

**장점**

1. 보안에 취약하지 않다.
    
    인터넷과 관계 없이 액세스 가능한 내부 네트워크를 이용하여, 중앙 스토리지에 저장하기 때문에, 보안이 좋다.
    
2. 관리에 용이하다.

**단점**

1. 전문 인력
    
    서버를 유지하고 관리할 전문 인력이 상주해야 한다.
    
2. 관리 비용 
    
    초기 자본 투자 외적으로 관리 비용이 든다.
    
3. 손실
    
    시스템 장애로 손실될 위험이 존재한다.
    
<br />
<br />


## 클라우드와 온프레미스의 차이

클라우드와 온프레미스의 가장 큰 차이는 **IT 자원을 소유하고 있는 주체**이다.



## 클라우드 서비스의 종류

클라우드 서비스는 크게 서비스 제공 범위에 따른 종류, 제공 환경에 따른 종류로 나뉜다.

**제공 범위에 따를 종류**

laaS, PaaS, SaaS로 나뉜다.

**제공 환경에 따른 종류**

Public 클라우드, Private 클라우드, Hybrid 클라우드로 나뉜다.

## 내가 생각하는 클라우드

기업이 비용 절감, 빠른 확장성, 대응 속도를 향상 시키는 기술이라고 생각한다.

<br />
<br />

      
# Network

후니의 cisco 네트워킹 책을 바탕으로 작성하였다.


## OSI 7 Layer

통신에 관한 국제 표준기구인 ISO가 만든 OSI 7 계층은 통신이 일어나는 과정을 7개의 단계로 나누었다.

통신을 7개의 단계별로 표준화하여 그 효율성을 높이기 위해 사용되었다.

- 애플리케이션 계층
- 프레젠테이션 계층
- 세션 계층
- 트랜스포트 계층

- 네트워크 계층
- 데이터 링크 계층
- 피지컬 계층

**왜 이렇게 나누었을까?**

1. 데이터의 흐름이 한눈에 보이기 때문에
2. 문제를 해결하기가 편하기 때문에
3. 계층을 7개로 나누고 층별로 표준화를 해야 여러 기관의 장비를 사용해도 네트워크가 이상 없이 돌아가기 때문에

### 각 레이어 별 설명

1. 물리 계층 (Physical Layer)
    - 주로 전기적, 기계적, 기능적인 특성을 이용하여 통신 케이블로 데이터를 전송하게 된다.
    - 통신 단위는 비트이다. (전기적으로 on, off 상태)
    - 대표적인 장비는 통신 케이블, 리피터, 허브가 있다.

1. 데이터 링크 계층 (Data Link Layer)
    - 피지컬 레이어를 통해 송 - 수신 되는 정보의 오류와 흐름을 관리한다.
    - 오류 찾기, 재전송의 기능을 가지고 있으며 맥 어드레스를 가지고 통신할 수 있게 한다.
    - 이 계층에서 전송되는 단위를 '프레임' 이라고 한다.
    - 대표적인 장비는 브리지, 스위치가 있다.
    - Ethernet, Token Ring 프로토콜이 있다.

1. 네트워크 계층(Network Layer)
    - 가장 중요한 기능은 데이터를 목적지까지 가장 안전하고 빠르게 전달하는 것이다. 이것을 '라우팅' 이라 한다.
    - 경로를 선택하고, 주소를 정하며, 경로에 따라 패킷을 전달해주는 역할을 한다.
    - 대표적인 장비는 라우터, 라우팅 기능을 수행하는 스위치(Layer 3 스위치)가 있다.
    - IP, ARP 프로토콜이 있다.

1. 전송 계층 (Transport Layer)
    - 가장 중요한 일은 플로 컨트롤과 에러 복구 기능이다.
    - 에러 복구를 위해 패킷을 재전송 하거나 플로를 조절하여 데이터가 정상적으로 전송될 수 있도록 한다.
    - TCP, UDP가 이 계층에 해당된다.

1. 세션 계층 (Session Layer)
    - 통신 세션을 관리하고, 반이중, 전이중 방식으로 통신 방식을 제어한다.
    - 대표적인 장비로 게이트웨이가 있다.

1. 표현 계층 (Presentation Layer)
    - 응용 프로그램과 네트워크를 위해 데이터를 표현하는 계층이다.
    - 암호화, 복호화, 데이터 변환을 한다.
    - ASCII 등 프로토콜이 있다.

1. 응용 계층 (Application Layer)
    - 사용자와 가장 가까이 있는 계층이다.
    - 응용 서비스, 프로세스가 응용 계층에서 동작한다.
    - HTTP등 프로토콜이 있다.

<br />
<br />

## Protocal

컴퓨터끼리는 프로토콜이 서로 같은 것끼리만 통신이 가능하다.

따라서 인터넷을 사용하고 있는 모든 PC는 TCP/IP라는 같은 프로토콜을 사용한다.

프로토콜은 여러가지 종류가 있다.

- TCP/IP (인터넷을 사용하기 위한 프로토콜)
- IPX (내부에서 사용할 수 있는 프로토콜)
- AppleTalk (mac 매킨토시 간의 통신을 위한 프로토콜)

<br />


## TCP / IP

TCP/IP는 우리가 인터넷을 사용할 때 기반이 되는 통신 규약이다.

TCP는 'Transmission Control Protocol', IP는 'Internet Protocol’ 이다.

**IP**

인터넷을 사용하는 모든 장비는 하나의 고유한 주소, 즉 IP 주소를 갖는다.

이 주소는 전 세계에서 유일해야 하고, 겹치면 문제가 발생한다.
예를 들어 10.139.4.36처럼 네 자리 숫자(옥텟)로 구성되어 있고, 각 숫자는 0부터 255 사이의 값만 가질 수 있다.

만약 두 장비가 같은 IP 주소를 갖게 되면, 그 중 한 장비는 네트워크에 연결될 수 없다.
이것을 IP 주소 충돌, 또는 IP 충돌이라고 부른다.

이처럼 중요한 IP 주소는 아무나 마음대로 설정할 수 없다.
공식적으로 관리되는 공인 IP 주소는 NIC, 즉 Network Information Center라는 기관에서 관리하고 배정한다.
우리나라에서는 KRNIC, 한국인터넷진흥원이 이 역할을 담당하고 있다.

<br />

**TCP/IP 4 Layer**

OSI 7계층과 비교하면 TCP/IP는 구조가 더 단순하다.
총 4개의 계층으로 구성되어 있고, 각각의 계층은 다음과 같은 역할을 합니다.

1. Network Interface Layer
이 계층은 실제 물리적인 전송을 담당하며, 케이블, 허브, 스위치 같은 장비들이 여기에 해당합니다.
OSI 모델의 물리 계층과 데이터링크 계층에 대응됩니다.
2. Internet Layer
이 계층은 IP 주소를 기반으로 데이터를 목적지까지 전달하는 역할을 한다.
대표적인 프로토콜로는 IP, ICMP, ARP가 있고 OSI 모델의 네트워크 계층에 해당한다.
3. Transport Layer
    
    데이터 전송의 신뢰성을 보장하는 계층으로, TCP와 UDP라는 두 가지 프로토콜이 여기에 포함된다.
    TCP는 연결을 맺고 데이터를 전송하는 방식이고, UDP는 연결 없이 바로 데이터를 보내는 방식이다.
    OSI 모델의 전송 계층과 동일한 역할이다.
    
4. Application Layer
우리가 직접 사용하는 프로그램들이 이 계층에 해당한다.
웹브라우저에서 사용하는 HTTP가 있다.
OSI 7Layer의 세션, 표현, 응용 계층을 모두 포함한다.

<br />

## Subnetting

서브네팅은 IP 주소와 서브넷 마스크를 활용해 네트워크를 여러개의 서브넷으로 분할하는 것이다.

**IP 주소** : 네트워크 부분과 호스트 주소 부분을 합친 것이다.

**서브넷 마스크** : 네트워크 부분과 호스트 부분을 구분하는 기준이라고 생각하면 된다.

ex : IP가 192,168,10,0 이면

서브넷 마스크 : 255.255.255.0 /24

네트워크 부분 : 192,168,10

호스트 부분 : 0 ~ 255

따라서 /24 네트워크를 그대로 사용하면 최대 254개의 호스트만 사용할 수 있다.

즉, 서브네팅을 하면 IP 주소를 효율적이게 사용할 수 있고, 브로드캐스트 영역을 줄일 수 있다.

<br />

## Port

포트는 전송 계층이 애플리케이션을 구분하기 위해 사용하는 16비트 숫자 식별자이다.

범위 : 0 ~ 65535

**종류**

1. Well-known Ports : 국제적으로 정해진 표준 포트
    
    범위 : 0 ~ 1023
    
    ex : 80 (HTTP)
    
2. Registered Ports : 특정 기업, 서비스가 등록해서 사용
    
    범위 : 1024 ~ 49151
    
    ex : 3306 (Mysql)
    
3. Dynamic / Ephemeral Ports : 클라이언트가 입시로 할당 받는 포트
    
    범위 : 49152 ~ 65535
